{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAChC,OACI,sBAAKC,UAAU,yBAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,kCAAKA,EAAL,W,uBCNCK,EAAO,uCAAG,WAAMX,GAAN,uBAAAY,EAAA,6DAEbL,EAFa,iDAEmCM,UAAUb,GAF7C,+DAGAc,MAAMP,GAHN,cAGbQ,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZW,GAdY,4CAAH,sDCIPM,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAErB,ECFwB,SAACA,GACzB,MAA0BR,mBAAS,CAC/ByB,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPjB,EAAQX,GACH6B,MAAK,SAAAT,GACFO,EAAS,CACLV,KAAMG,EACNK,SAAQ,SAGrB,CAACzB,IAEG0B,EDdwBI,CAAa9B,GAAhCsB,EAAZ,EAAOL,KAAaQ,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAKzB,IAEJyB,GAAW,mBAAGjB,UAAU,wCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SACKc,EAAOH,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEbtBU,EAAe,WAExB,MAAoCvC,mBAAS,CAAC,aAA9C,mBAAOwC,EAAP,KAAmBzC,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQyC,EAAWb,KAAI,SAAAnB,GAAQ,OAEnB,aADJ,CACK,EAAD,CAEIA,SAAUA,GADHA,Y,MClBnCiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.287e5590.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const HanldeInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    \r\n    const hanldeSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (inputValue.trim().length > 2) {\r\n            \r\n            setCategories(category => [inputValue, ...category] )\r\n            setInputValue('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={hanldeSubmit}>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={HanldeInputChange}\r\n            />            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","// export const GifGridItem = (props) => {\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__bounceIn\">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=yFh6D6ZicAX0v5wrv2edYkfGFgEqkLze`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json(); \r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import { GifGridItem } from \"./GifGridItem\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p className='animate__animated animate__fadeInDown'>Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {images.map(img => (\r\n                    <GifGridItem \r\n                        key = {img.id}\r\n                        {...img}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => { \r\n        getGifs(category)\r\n            .then(img => {\r\n                setState({\r\n                    data: img,\r\n                    loading:false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state; \r\n}","import { useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\"\r\nimport { GifGrid } from \"./components/GifGrid\"\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['Konosuba'])\r\n    \r\n    // const handleAdd = () => {\r\n    //     setCategories( category => [...category, 'Naruto'] );\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />   \r\n    \r\n            <ol>\r\n                {\r\n                    categories.map(category => ( \r\n                    // <li key={category}> {category} </li>\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </ol>\r\n\r\n\r\n        \r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}